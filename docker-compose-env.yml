version: "3"

services:
  nginx-proxy:
    build: nginx
    restart: always
    volumes:
      - ./nginx/default.conf:/tmp/default.conf
    environment:
      - APP_SERVER_ADDR=chirpstack-application-server:8080
    ports:
      - "80:80"
    depends_on:
      - chirpstack-application-server
    # healthcheck:
    #   test:
    #     [
    #       "CMD-SHELL",
    #       "curl --silent --fail localhost:80/health-check || exit 1",
    #     ]
    #   interval: 10s
    #   timeout: 10s
    #   retries: 3
    command: /app/start.sh

  chirpstack-network-server:
    image: chirpstack/chirpstack-network-server:3
    restart: unless-stopped
    environment:
      - POSTGRESQL__DSN=postgres://chirpstack_ns:chirpstack_ns@postgresql/chirpstack_ns?sslmode=disable
      - REDIS__URL=redis://redis:6379
      - NETWORK_SERVER__BAND__NAME=EU868
      - NETWORK_SERVER__GATEWAY__BACKEND__MQTT__SERVER=tcp://mosquitto:1883
      - JOIN_SERVER__DEFAULT__SERVER=http://chirpstack-application-server:8003
      - GEOLOCATION_SERVER__SERVER=chirpstack-geolocation-server:8005
    depends_on:
      - postgresql
      - mosquitto

  chirpstack-application-server:
    image: chirpstack/chirpstack-application-server:3
    restart: unless-stopped
    ports:
      - 8080:8080
    environment:
      - POSTGRESQL__DSN=postgres://chirpstack_as:chirpstack_as@postgresql/chirpstack_as?sslmode=disable
      - REDIS__URL=redis://redis:6379
      - APPLICATION_SERVER__INTEGRATION__MQTT__SERVER=tcp://mosquitto:1883
      - APPLICATION_SERVER__API__PUBLIC_HOST=chirpstack-application-server:8001
      - APPLICATION_SERVER__EXTERNAL_API__JWT_SECRET=verysecret
    depends_on:
      - chirpstack-network-server

  chirpstack-gateway-bridge:
    image: chirpstack/chirpstack-gateway-bridge:3
    restart: unless-stopped
    ports:
      - 1700:1700/udp
    environment:
      - INTEGRATION__MQTT__AUTH__GENERIC__SERVERS=tcp://mosquitto:1883
    depends_on:
      - mosquitto

  chirpstack-geolocation-server:
    image: chirpstack/chirpstack-geolocation-server:3
    restart: unless-stopped
    environment:
      - GEO_SERVER__BACKEND__NAME=collos

  postgresql:
    image: postgres:9.6-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=root
    volumes:
      - ./configuration/postgresql/initdb:/docker-entrypoint-initdb.d
      - postgresqldata:/var/lib/postgresql/data

  redis:
    image: redis:5-alpine
    restart: unless-stopped
    volumes:
      - redisdata:/data

  mosquitto:
    image: eclipse-mosquitto:1.6
    restart: unless-stopped
    ports:
      - 1883:1883

volumes:
  postgresqldata:
  redisdata:
